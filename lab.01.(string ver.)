#include <iostream>
#include <cstring>

using namespace std;

bool symbol_check(char sym){
    switch(sym)
    {
        case '+': return true;
        case '-': return true;
        case '(': return true;
        case ')': return true;
        case '^': return true;
        case '/': return true;
        case '*': return true;
    }
    return false;
}

int priority(char sym){
    switch(sym)
    {
        case '(': return 1;
        case '+': return 2;
        case '-': return 2;
        case '^': return 4;
        case '/': return 3;
        case '*': return 3;
    }
    return 0;
}


int main()
{
    char *input = new char[100];
    cin.getline(input, 100);
    char *exit = new char[strlen(input)-1]; int exitid=0;
    char *operstack = new char[strlen(input)-1]; int ostid=0;
    int *calculation = new int[10]; int calc=0;
    //input[strlen(input)]='!';

    for(int i=0;i<strlen(input);){
            if(!symbol_check(input[i])){
                    exit[exitid]=input[i];
                    i++; exitid++;
            } else if(symbol_check(input[i])){
                    if(ostid>0){
                            if(priority(input[i])<=priority(operstack[ostid-1])){
                                exit[exitid]=operstack[ostid-1];
                                operstack[ostid-1]=input[i];
                                exitid++;
                                cout<< "first"<<input[i]<<endl;
                            }else if(priority(input[i])>priority(operstack[ostid-1])){
                                operstack[ostid]=input[i];
                                ostid++;
                                cout<<"second"<<input[i]<<endl;
                            }
                    }else if(ostid==0){
                            operstack[ostid]=input[i];
                            ostid++;
                            cout<<"third"<< input[i]<<endl;
                    }
             i++;
            }

    }

    for(int i=ostid;i>=0;i--){
        exit[exitid]=operstack[i];
        exitid++;
        cout<<exit[exitid]<<operstack[i]<<endl;
    }

/*
    for(int i=0;i<=exitid;i++){
        if(!symbol_check(exit[i])){
            calculation[calc]=(int)exit[i]-48;
            calc++;
        }else if(symbol_check(exit[i])){
            switch(exit[i]){
                case'+':{calculation[calc-1]=calculation[calc-1]+calculation[calc];}
                case'-':{calculation[calc-1]=calculation[calc-1]-calculation[calc];}
                case'*':{calculation[calc-1]=calculation[calc]*calculation[calc-1];}
                case'/':{calculation[calc-1]=calculation[calc]/calculation[calc-1];}
                //case'^':{}
            }
        }

    }
*/
    //cout<<input<< " | " << exit<< " | " << operstack <<endl;
      cout<<exit<< " | " << operstack <<endl;


    delete[] operstack;
    delete[] exit;
    delete[] input;
    return 0;
}
